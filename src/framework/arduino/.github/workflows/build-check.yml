 
name: build-check

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]
      
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        example: [examples/directionDetection/directionDetection.ino,
                  examples/interruptMode/interruptMode.ino,
                  examples/motionDetection/motionDetection.ino]

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Chache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key:  ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        pio platform install -f infineonxmc@1.1.3
        pio platform install -f atmelavr@2.0.0
        pio platform install -f atmelsam
    - name: Run PlatformIO
      run: pio ci --lib="." --board=xmc1100_boot_kit --board=xmc1100_xmc2go --board=uno --board=mkr1000USB
      env:
        PLATFORMIO_CI_SRC: ${{ matrix.example }}